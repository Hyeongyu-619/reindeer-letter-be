service: reindeer-letter-api

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-plugin-optimize

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-2
  stage: ''
  environment:
    NODE_OPTIONS: '--enable-source-maps'
    TRANSFORM_ENABLED: 'true'
  apiGateway:
    shouldStartNameWithService: true
    minimumCompressionSize: 1024
    binaryMediaTypes:
      - 'multipart/form-data'
      - 'image/*'
      - '*/*'

package:
  individually: false
  patterns:
    - '!node_modules/**'
    - '!tests/**'
    - '!coverage/**'
    - '!.git/**'
    - '!.vscode/**'
    - '!src/**/*.spec.ts'
    - '!src/**/*.test.ts'
    - 'dev.json'
    - 'dist/**'
    - '!dist/**/*.map'
    - 'node_modules/.prisma/client/**'
    - '!node_modules/.prisma/client/libquery_engine-*'
    - 'node_modules/.prisma/client/libquery_engine-rhel-*'
    - '!node_modules/@prisma/engines/**'

custom:
  typescript:
    srcPath: ./src
    buildDir: .build
  serverless-offline:
    noPrependStageInUrl: true
    httpPort: 3000
    stageVariables:
      stage: ${self:provider.stage}

functions:
  api:
    handler: dist/lambda.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  processScheduledLetters:
    handler: src/lambda-cron.handler
    events:
      - schedule: cron(0 15 * * ? *)
