service: reindeer-letter-api

plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-2
  stage: dev
  environment:
    NODE_OPTIONS: '--enable-source-maps'
    TRANSFORM_ENABLED: 'true'
    PRISMA_BINARY_TARGET: rhel-openssl-1.0.x
  apiGateway:
    shouldStartNameWithService: true
    minimumCompressionSize: 1024
    binaryMediaTypes:
      - 'multipart/form-data'
      - 'image/*'
      - '*/*'

package:
  individually: false
  patterns:
    - '!node_modules/**'
    - '!tests/**'
    - '!coverage/**'
    - '!.git/**'
    - '!.vscode/**'
    - '!src/**/*.spec.ts'
    - '!src/**/*.test.ts'
    - 'dev.json'
    - 'dist/**'
    - '!dist/**/*.map'
    - 'node_modules/.prisma/client/**'
    - '!node_modules/.prisma/client/libquery_engine-*'
    - 'node_modules/.prisma/client/libquery_engine-rhel-*'
    - '!node_modules/prisma/libquery_engine-*'
    - '!node_modules/@prisma/engines/**'
    - 'node_modules/.prisma/client/libquery_engine-rhel-openssl-1.0.x.so.node'

custom:
  typescript:
    srcPath: ./src
    buildDir: .build
  serverless-offline:
    noPrependStageInUrl: true
    httpPort: 3000
    stageVariables:
      stage: ${self:provider.stage}

functions:
  main:
    handler: dist/src/lambda.handler
    events:
      - http:
          method: ANY
          path: /{proxy+}
    environment:
      PRISMA_QUERY_ENGINE_BINARY: '/var/task/node_modules/.prisma/client/libquery_engine-rhel-openssl-1.0.x.so.node'

  processScheduledLetters:
    handler: src/lambda-cron.handler
    events:
      - schedule: cron(0 15 * * ? *)
